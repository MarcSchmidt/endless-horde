var B=Object.defineProperty;var L=(u,e,t)=>e in u?B(u,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):u[e]=t;var n=(u,e,t)=>(L(u,typeof e!="symbol"?e+"":e,t),t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const a of i)if(a.type==="childList")for(const o of a.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&s(o)}).observe(document,{childList:!0,subtree:!0});function t(i){const a={};return i.integrity&&(a.integrity=i.integrity),i.referrerPolicy&&(a.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?a.credentials="include":i.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function s(i){if(i.ep)return;i.ep=!0;const a=t(i);fetch(i.href,a)}})();class g{constructor(e=0,t=0){n(this,"x");n(this,"y");this.x=e,this.y=t}clone(){return new g(this.x,this.y)}add(e){return this.x+=e.x,this.y+=e.y,this}subtract(e){return this.x-=e.x,this.y-=e.y,this}multiply(e){return this.x*=e,this.y*=e,this}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}normalize(){const e=this.length();return e>0&&(this.x/=e,this.y/=e),this}distanceTo(e){const t=this.x-e.x,s=this.y-e.y;return Math.sqrt(t*t+s*s)}set(e,t){return this.x=e,this.y=t,this}static add(e,t){return new g(e.x+t.x,e.y+t.y)}static subtract(e,t){return new g(e.x-t.x,e.y-t.y)}static multiply(e,t){return new g(e.x*t,e.y*t)}static random(e,t,s,i){return new g(Math.random()*(t-e)+e,Math.random()*(i-s)+s)}}class H{constructor(e=0,t=0){n(this,"id");n(this,"position");n(this,"velocity");n(this,"active");this.id=this.generateId(),this.position=new g(e,t),this.velocity=new g(0,0),this.active=!0}generateId(){return Math.random().toString(36).substr(2,9)}update(e){if(!this.active)return;const t=e/1e3;this.position.add(g.multiply(this.velocity,t))}render(e){this.active&&(e.save(),e.fillStyle="#ffffff",e.fillRect(this.position.x-5,this.position.y-5,10,10),e.restore())}isInBounds(e,t){return this.position.x>=0&&this.position.x<=e&&this.position.y>=0&&this.position.y<=t}destroy(){this.active=!1}}const v=class v{constructor(){n(this,"loadedImages",new Map);n(this,"spriteData",new Map);n(this,"loadingPromises",new Map)}static getInstance(){return v.instance||(v.instance=new v),v.instance}async loadImage(e){if(this.loadedImages.has(e))return this.loadedImages.get(e);if(this.loadingPromises.has(e))return this.loadingPromises.get(e);const t=new Promise((s,i)=>{const a=new Image;a.onload=()=>{this.loadedImages.set(e,a),this.loadingPromises.delete(e),s(a)},a.onerror=()=>{this.loadingPromises.delete(e),i(new Error(`Failed to load image: ${e}`))},a.src=e});return this.loadingPromises.set(e,t),t}registerSprite(e,t,s,i,a,o=a){return this.loadImage(t).then(r=>{this.spriteData.set(e,{image:r,frameWidth:s,frameHeight:i,frameCount:a,framesPerRow:o})})}getSprite(e){return this.spriteData.get(e)||null}getImage(e){return this.loadedImages.get(e)||null}isSpriteLoaded(e){return this.spriteData.has(e)}getAnimationFrame(e,t){const s=this.getSprite(e);if(!s)return null;const i=Math.floor(t/s.framesPerRow);return{x:t%s.framesPerRow*s.frameWidth,y:i*s.frameHeight,width:s.frameWidth,height:s.frameHeight}}createPlaceholderSprite(e,t,s,i,a){const o=document.createElement("canvas"),r=Math.min(i,4),l=Math.ceil(i/r);o.width=r*t,o.height=l*s;const h=o.getContext("2d");for(let d=0;d<i;d++){const m=Math.floor(d/r),D=d%r*t,I=m*s,W=d%a.length;h.fillStyle=a[W],h.fillRect(D,I,t,s),h.strokeStyle="#000",h.lineWidth=1,h.strokeRect(D,I,t,s),h.fillStyle="#fff",h.font="8px Arial",h.textAlign="center",h.fillText((d+1).toString(),D+t/2,I+s/2)}const c=new Image;c.src=o.toDataURL(),this.loadedImages.set(`placeholder_${e}`,c),this.spriteData.set(e,{image:c,frameWidth:t,frameHeight:s,frameCount:i,framesPerRow:r})}async initializePlaceholderSprites(){const e=[["#ff6b6b","#ff8e8e","#ffb1b1","#ffd4d4"],["#4ecdc4","#71d4cc","#94dbd4","#b7e2dc"],["#45b7d1","#68c5d9","#8bd3e1","#aee1e9"]];for(let s=0;s<e.length;s++)this.createPlaceholderSprite(`walker_area_${s+1}`,16,16,4,e[s]);const t=["#8B0000","#A52A2A","#DC143C","#B22222"];this.createPlaceholderSprite("zombie",16,16,4,t),console.log("Placeholder sprites initialized")}};n(v,"instance");let x=v;const f=class f{constructor(e){n(this,"assetManager");n(this,"spriteName");n(this,"frameRate");n(this,"loop");n(this,"isPlaying");n(this,"currentFrame",0);n(this,"elapsedTime",0);n(this,"frameTime");this.assetManager=x.getInstance(),this.spriteName=e.spriteName,this.frameRate=e.frameRate,this.loop=e.loop,this.isPlaying=e.autoPlay,this.frameTime=1e3/this.frameRate}static setReducedMotion(e){f.reducedMotionEnabled=e,console.log(`Reduced motion ${e?"enabled":"disabled"}`)}static isReducedMotionEnabled(){return f.reducedMotionEnabled}update(e){!this.isPlaying||f.reducedMotionEnabled||(this.elapsedTime+=e,this.elapsedTime>=this.frameTime&&(this.elapsedTime-=this.frameTime,this.advanceFrame()))}advanceFrame(){const e=this.assetManager.getSprite(this.spriteName);e&&(this.currentFrame++,this.currentFrame>=e.frameCount&&(this.loop?this.currentFrame=0:(this.currentFrame=e.frameCount-1,this.isPlaying=!1)))}render(e,t,s,i,a){const o=this.assetManager.getSprite(this.spriteName);if(!o){this.renderFallback(e,t,s,i||16,a||16);return}const r=this.assetManager.getAnimationFrame(this.spriteName,this.currentFrame);if(!r)return;const l=i||o.frameWidth,h=a||o.frameHeight,c=f.reducedMotionEnabled?this.assetManager.getAnimationFrame(this.spriteName,0):r;c&&e.drawImage(o.image,c.x,c.y,c.width,c.height,t-l/2,s-h/2,l,h)}renderFallback(e,t,s,i,a){e.save(),this.spriteName.includes("walker")?e.fillStyle="#4ecdc4":this.spriteName.includes("zombie")?e.fillStyle="#8B0000":e.fillStyle="#666",e.fillRect(t-i/2,s-a/2,i,a),e.strokeStyle="#000",e.lineWidth=1,e.strokeRect(t-i/2,s-a/2,i,a),e.restore()}play(){this.isPlaying=!0}pause(){this.isPlaying=!1}stop(){this.isPlaying=!1,this.currentFrame=0,this.elapsedTime=0}reset(){this.currentFrame=0,this.elapsedTime=0}getCurrentFrame(){return this.currentFrame}isAnimationPlaying(){return this.isPlaying}getSpriteName(){return this.spriteName}setSprite(e){this.spriteName=e,this.reset()}static createWalkAnimation(e){return new f({spriteName:e,frameRate:8,loop:!0,autoPlay:!0})}static createIdleAnimation(e){return new f({spriteName:e,frameRate:2,loop:!0,autoPlay:!0})}};n(f,"reducedMotionEnabled",!1);let A=f;class $ extends H{constructor(t,s,i,a,o){super(t,s);n(this,"speed");n(this,"baseSpeed");n(this,"targetPosition");n(this,"size");n(this,"canvasWidth");n(this,"canvasHeight");n(this,"retargetTimer");n(this,"retargetInterval");n(this,"_health");n(this,"_maxHealth");n(this,"_soulValue");n(this,"areaLevel");n(this,"walkAnimation");n(this,"isMoving",!1);o?(this.baseSpeed=o.walkerSpeed,this._health=o.walkerHealth,this._maxHealth=o.walkerHealth,this._soulValue=o.soulMultiplier,this.areaLevel=o.id):(this.baseSpeed=50,this._health=1,this._maxHealth=1,this._soulValue=1,this.areaLevel=0),this.speed=this.baseSpeed+(Math.random()-.5)*this.baseSpeed*.4,this.targetPosition=new g(t,s),this.size=8+Math.random()*8,this.canvasWidth=i,this.canvasHeight=a,this.retargetTimer=0,this.retargetInterval=2e3+Math.random()*3e3,this.setRandomTarget();const r=`walker_area_${this.areaLevel+1}`;this.walkAnimation=A.createWalkAnimation(r)}setRandomTarget(){this.targetPosition=g.random(this.size,this.canvasWidth-this.size,this.size,this.canvasHeight-this.size)}update(t){if(!this.active)return;this.retargetTimer+=t,(this.retargetTimer>=this.retargetInterval||this.position.distanceTo(this.targetPosition)<10)&&(this.setRandomTarget(),this.retargetTimer=0,this.retargetInterval=2e3+Math.random()*3e3);const s=g.subtract(this.targetPosition,this.position);s.length()>1?(s.normalize().multiply(this.speed),this.velocity=s,this.isMoving=!0):(this.velocity.set(0,0),this.isMoving=!1),super.update(t),this.isMoving?this.walkAnimation.play():this.walkAnimation.pause(),this.walkAnimation.update(t)}render(t){if(this.active){if(t.save(),this.walkAnimation.render(t,this.position.x,this.position.y,this.size,this.size),this._maxHealth>1){const s=this.size,i=3,a=this.position.y-this.size/2-6;t.fillStyle="#333",t.fillRect(this.position.x-s/2,a,s,i);const o=this.getHealthPercentage(),r=o>.6?"#4CAF50":o>.3?"#FF9800":"#F44336";t.fillStyle=r,t.fillRect(this.position.x-s/2,a,s*o,i)}t.restore()}}updateCanvasDimensions(t,s){this.canvasWidth=t,this.canvasHeight=s,this.isTargetInBounds()||this.setRandomTarget()}isTargetInBounds(){const t=this.size/2;return this.targetPosition.x>=t&&this.targetPosition.x<=this.canvasWidth-t&&this.targetPosition.y>=t&&this.targetPosition.y<=this.canvasHeight-t}get health(){return this._health}get maxHealth(){return this._maxHealth}get soulValue(){return this._soulValue}get areaId(){return this.areaLevel}takeDamage(t=1){return this._health-=t,this._health<=0?(this.destroy(),!0):!1}isFullHealth(){return this._health>=this._maxHealth}getHealthPercentage(){return this._health/this._maxHealth}updateAreaSprite(t){this.areaLevel=t;const s=`walker_area_${t+1}`;this.walkAnimation.setSprite(s)}}class U{constructor(e,t,s=10,i=100){n(this,"pool",[]);n(this,"createFn");n(this,"resetFn");n(this,"maxSize");this.createFn=e,this.resetFn=t,this.maxSize=i;for(let a=0;a<s;a++)this.pool.push(this.createFn())}get(){return this.pool.length>0?this.pool.pop():this.createFn()}release(e){this.pool.length<this.maxSize&&(this.resetFn(e),this.pool.push(e))}getPoolSize(){return this.pool.length}clear(){this.pool=[]}}var C=(u=>(u.HIGH="high",u.MEDIUM="medium",u.LOW="low",u))(C||{});const M=class M{constructor(){n(this,"frameCount",0);n(this,"lastFpsTime",0);n(this,"fps",60);n(this,"frameTime",16.67);n(this,"frameTimes",[]);n(this,"maxFrameTimeHistory",60);n(this,"HIGH_FPS_THRESHOLD",50);n(this,"MEDIUM_FPS_THRESHOLD",30);n(this,"HIGH_FRAME_TIME_THRESHOLD",20);n(this,"MEDIUM_FRAME_TIME_THRESHOLD",33);n(this,"currentLevel","high");n(this,"levelChangeCallbacks",[]);n(this,"entityCount",0);n(this,"particleCount",0);n(this,"renderCalls",0);n(this,"cullingEnabled",!1);n(this,"maxEntitiesBeforeCulling",60);n(this,"maxParticlesBeforeCulling",100)}static getInstance(){return M.instance||(M.instance=new M),M.instance}updateMetrics(e,t,s){if(this.frameTimes.length>0){const i=this.frameTimes[this.frameTimes.length-1];this.frameTime=e-i}this.frameTimes.push(e),this.frameTimes.length>this.maxFrameTimeHistory&&this.frameTimes.shift(),this.frameCount++,e-this.lastFpsTime>=1e3&&(this.fps=Math.round(this.frameCount*1e3/(e-this.lastFpsTime)),this.frameCount=0,this.lastFpsTime=e,this.updatePerformanceLevel()),this.entityCount=t,this.particleCount=s,this.renderCalls=0}incrementRenderCalls(){this.renderCalls++}updatePerformanceLevel(){const e=this.getAverageFrameTime();let t;this.fps>=this.HIGH_FPS_THRESHOLD&&e<=this.HIGH_FRAME_TIME_THRESHOLD?t="high":this.fps>=this.MEDIUM_FPS_THRESHOLD&&e<=this.MEDIUM_FRAME_TIME_THRESHOLD?t="medium":t="low",t!==this.currentLevel&&(console.log(`Performance level changed: ${this.currentLevel} -> ${t}`),this.currentLevel=t,this.updateCullingSettings(),this.levelChangeCallbacks.forEach(s=>s(t)))}updateCullingSettings(){switch(this.currentLevel){case"high":this.cullingEnabled=!1,this.maxEntitiesBeforeCulling=80,this.maxParticlesBeforeCulling=150;break;case"medium":this.cullingEnabled=!0,this.maxEntitiesBeforeCulling=50,this.maxParticlesBeforeCulling=75;break;case"low":this.cullingEnabled=!0,this.maxEntitiesBeforeCulling=30,this.maxParticlesBeforeCulling=40;break}}getAverageFrameTime(){if(this.frameTimes.length<2)return this.frameTime;let e=0;for(let t=1;t<this.frameTimes.length;t++)e+=this.frameTimes[t]-this.frameTimes[t-1];return e/(this.frameTimes.length-1)}getFPS(){return this.fps}getFrameTime(){return this.frameTime}getPerformanceLevel(){return this.currentLevel}getMetrics(){return{fps:this.fps,frameTime:this.frameTime,entityCount:this.entityCount,particleCount:this.particleCount,renderCalls:this.renderCalls}}shouldCullEntities(){return this.cullingEnabled&&this.entityCount>this.maxEntitiesBeforeCulling}shouldCullParticles(){return this.cullingEnabled&&this.particleCount>this.maxParticlesBeforeCulling}getMaxEntities(){return this.maxEntitiesBeforeCulling}getMaxParticles(){return this.maxParticlesBeforeCulling}onPerformanceLevelChange(e){this.levelChangeCallbacks.push(e)}shouldUseReducedQuality(){return this.currentLevel==="low"}shouldSkipEffects(){return this.currentLevel==="low"}getEntityUpdateFrequency(){switch(this.currentLevel){case"high":return 1;case"medium":return .8;case"low":return .6;default:return 1}}};n(M,"instance");let P=M;const S=class S{constructor(){n(this,"performanceMonitor");n(this,"VIEWPORT_MARGIN",50);n(this,"UPDATE_SKIP_DISTANCE",200);this.performanceMonitor=P.getInstance()}static getInstance(){return S.instance||(S.instance=new S),S.instance}cullEntities(e,t,s,i){if(!this.performanceMonitor.shouldCullEntities()&&!i)return e;const a=e.filter(l=>l.active),o=i||this.performanceMonitor.getMaxEntities();if(a.length<=o)return a;const r=a.filter(l=>this.isInViewport(l,t,s));return r.length>o?this.priorityCull(r,t,s,o):r}isInViewport(e,t,s){const i=this.VIEWPORT_MARGIN;return e.position.x>=-i&&e.position.x<=t+i&&e.position.y>=-i&&e.position.y<=s+i}priorityCull(e,t,s,i){const a=t/2,o=s/2,r=e.map(l=>{const h=Math.sqrt(Math.pow(l.position.x-a,2)+Math.pow(l.position.y-o,2)),c=Math.sqrt(t*t+s*s),d=1-h/c,m=l.priority||.5,p=d*.7+m*.3;return{entity:l,score:p}});return r.sort((l,h)=>h.score-l.score),r.slice(0,i).map(l=>l.entity)}shouldSkipUpdate(e,t,s){const i=this.performanceMonitor.getEntityUpdateFrequency();if(i>=1)return!1;if(Math.random()>i)return!0;const a=t/2,o=s/2,r=Math.sqrt(Math.pow(e.position.x-a,2)+Math.pow(e.position.y-o,2));if(r>this.UPDATE_SKIP_DISTANCE){const l=Math.min(.8,(r-this.UPDATE_SKIP_DISTANCE)/this.UPDATE_SKIP_DISTANCE);return Math.random()<l}return!1}cullParticles(e,t,s){if(!this.performanceMonitor.shouldCullParticles())return e;const i=this.performanceMonitor.getMaxParticles();if(e.length<=i)return e;const a=e.map(o=>{const r=o.life/o.maxLife,l=t/2,h=s/2,c=Math.sqrt(Math.pow(o.x-l,2)+Math.pow(o.y-h,2)),d=Math.sqrt(t*t+s*s),m=1-c/d,p=r*.6+m*.4;return{particle:o,score:p}});return a.sort((o,r)=>r.score-o.score),a.slice(0,i).map(o=>o.particle)}setEntityPriority(e,t){e.priority=Math.max(0,Math.min(1,t))}};n(S,"instance");let T=S;const b=class b{constructor(){}static getInstance(){return b.instance||(b.instance=new b),b.instance}applySeparation(e,t=50){for(let s=0;s<e.length;s++){const i=e[s];if(!i.active)continue;const a=new g(0,0);let o=0;for(let r=0;r<e.length;r++){if(s===r)continue;const l=e[r];if(!l.active)continue;const h=i.position.distanceTo(l.position),c=(i.size+l.size)/2+5;if(h<c&&h>0){const d=g.subtract(i.position,l.position);d.normalize();const m=(c-h)/c;d.multiply(m),a.add(d),o++}}o>0&&(a.multiply(1/o),a.multiply(t),i.velocity.add(g.multiply(a,.016)))}}applyBoundaryCollision(e,t,s,i=100){if(!e.active)return;const a=e.size/2,o=20;if(e.position.x<a+o){const r=a+o-e.position.x,l=Math.min(r/o,1)*i;e.velocity.x+=l*.016,e.position.x<a&&(e.position.x=a,e.velocity.x=Math.max(0,e.velocity.x))}if(e.position.x>t-a-o){const r=e.position.x-(t-a-o),l=Math.min(r/o,1)*i;e.velocity.x-=l*.016,e.position.x>t-a&&(e.position.x=t-a,e.velocity.x=Math.min(0,e.velocity.x))}if(e.position.y<a+o){const r=a+o-e.position.y,l=Math.min(r/o,1)*i;e.velocity.y+=l*.016,e.position.y<a&&(e.position.y=a,e.velocity.y=Math.max(0,e.velocity.y))}if(e.position.y>s-a-o){const r=e.position.y-(s-a-o),l=Math.min(r/o,1)*i;e.velocity.y-=l*.016,e.position.y>s-a&&(e.position.y=s-a,e.velocity.y=Math.min(0,e.velocity.y))}}areColliding(e,t){if(!e.active||!t.active)return!1;const s=e.position.distanceTo(t.position),i=(e.size+t.size)/2;return s<=i}getCollisionDistance(e,t){const s=e.position.distanceTo(t.position),i=(e.size+t.size)/2;return Math.max(0,i-s)}};n(b,"instance");let E=b;class O{constructor(e,t,s){n(this,"walkers",[]);n(this,"targetWalkerCount",40);n(this,"canvasWidth");n(this,"canvasHeight");n(this,"spawnTimer",0);n(this,"spawnInterval",100);n(this,"areaManager");n(this,"walkerPool");n(this,"entityCuller");n(this,"performanceMonitor");n(this,"collisionSystem");this.canvasWidth=e,this.canvasHeight=t,this.areaManager=s,this.entityCuller=T.getInstance(),this.performanceMonitor=P.getInstance(),this.collisionSystem=E.getInstance(),this.walkerPool=new U(()=>{const i=this.getRandomEdgePosition(),a=this.areaManager.getCurrentArea();return new $(i.x,i.y,this.canvasWidth,this.canvasHeight,a)},i=>{i.active=!0;const a=this.getRandomEdgePosition();i.position.set(a.x,a.y),i.velocity.set(0,0);const o=this.areaManager.getCurrentArea();i.updateAreaSprite(o.id)},10,50)}update(e){this.spawnTimer+=e,this.walkers.length<this.targetWalkerCount&&this.spawnTimer>=this.spawnInterval&&(this.spawnWalker(),this.spawnTimer=0);const t=this.entityCuller.cullEntities(this.walkers,this.canvasWidth,this.canvasHeight);for(let i=this.walkers.length-1;i>=0;i--){const a=this.walkers[i];if(!a.active){this.walkerPool.release(a),this.walkers.splice(i,1);continue}t.includes(a)&&!this.entityCuller.shouldSkipUpdate(a,this.canvasWidth,this.canvasHeight)&&(a.update(e),a.lastUpdateTime=performance.now())}const s=this.walkers.filter(i=>i.active);s.length>1&&this.collisionSystem.applySeparation(s,30);for(const i of s)this.collisionSystem.applyBoundaryCollision(i,this.canvasWidth,this.canvasHeight,80)}render(e){for(const t of this.walkers)t.active&&(t.render(e),this.performanceMonitor.incrementRenderCalls())}spawnWalker(){const e=this.walkerPool.get(),t=this.areaManager.getCurrentArea();this.entityCuller.setEntityPriority(e,.5+t.id*.1),this.walkers.push(e)}getRandomEdgePosition(){switch(Math.floor(Math.random()*4)){case 0:return{x:Math.random()*this.canvasWidth,y:-20};case 1:return{x:this.canvasWidth+20,y:Math.random()*this.canvasHeight};case 2:return{x:Math.random()*this.canvasWidth,y:this.canvasHeight+20};case 3:return{x:-20,y:Math.random()*this.canvasHeight};default:return{x:0,y:0}}}updateCanvasDimensions(e,t){this.canvasWidth=e,this.canvasHeight=t;for(const s of this.walkers)s.updateCanvasDimensions(e,t)}getWalkerCount(){return this.walkers.filter(e=>e.active).length}getActiveWalkers(){return this.walkers.filter(e=>e.active)}clear(){for(const e of this.walkers)e.destroy(),this.walkerPool.release(e);this.walkers=[]}updateWalkerSprites(e){for(const t of this.walkers)t.active&&t.updateAreaSprite(e)}}const w=class w{constructor(){}static getInstance(){return w.instance||(w.instance=new w),w.instance}canAttack(e,t,s,i){if(!e.active||!t.active||e.lastAttackTime!==void 0&&i-e.lastAttackTime<s.cooldown)return!1;const a=e.position.distanceTo(t.position),o=s.range+(e.size+t.size)/2;return a<=o}performAttack(e,t,s,i){return this.canAttack(e,t,s,i)?(e.lastAttackTime=i,t.takeDamage(s.damage),!0):!1}getRemainingCooldown(e,t,s){if(e.lastAttackTime===void 0)return 0;const i=s-e.lastAttackTime;return Math.max(0,t.cooldown-i)}isInRange(e,t,s){if(!e.active||!t.active)return!1;const i=e.position.distanceTo(t.position),a=s.range+(e.size+t.size)/2;return i<=a}getDistanceToRange(e,t,s){const i=e.position.distanceTo(t.position),a=s.range+(e.size+t.size)/2;return i-a}};n(w,"instance");let R=w;class N extends H{constructor(t,s,i,a,o=1){super(t,s);n(this,"baseSpeed");n(this,"speed");n(this,"target",null);n(this,"size");n(this,"seekRange");n(this,"lastAttackTime");n(this,"attackConfig");n(this,"attackSystem");n(this,"walkAnimation");n(this,"isMoving",!1);this.baseSpeed=60,this.speed=this.baseSpeed*o,this.size=10,this.seekRange=200,this.attackSystem=R.getInstance(),this.attackConfig={damage:1,range:5,cooldown:500},this.walkAnimation=A.createWalkAnimation("zombie")}update(t){super.update(t)}updateWithWalkers(t,s){this.active&&(this.findNearestWalker(s),this.target&&this.target.active?(this.seekTarget(),this.isMoving=!0):(this.velocity.set(0,0),this.isMoving=!1),this.update(t),this.isMoving?this.walkAnimation.play():this.walkAnimation.pause(),this.walkAnimation.update(t))}findNearestWalker(t){let s=null,i=1/0;for(const a of t){if(!a.active)continue;const o=this.position.distanceTo(a.position);o<=this.seekRange&&o<i&&(i=o,s=a)}this.target=s}seekTarget(){if(!this.target)return;const t=g.subtract(this.target.position,this.position);t.length()>1?(t.normalize().multiply(this.speed),this.velocity=t):this.velocity.set(0,0)}render(t){this.active&&(t.save(),this.walkAnimation.render(t,this.position.x,this.position.y,this.size,this.size),t.restore())}updateCanvasDimensions(t,s){}getTarget(){return this.target}canAttack(t){const s=performance.now();return this.attackSystem.canAttack(this,t,this.attackConfig,s)}performAttack(t){const s=performance.now();return this.attackSystem.performAttack(this,t,this.attackConfig,s)}isInAttackRange(t){return this.attackSystem.isInRange(this,t,this.attackConfig)}updateSpeed(t){this.speed=this.baseSpeed*t}}class V{constructor(e,t,s,i,a){n(this,"zombies",[]);n(this,"canvasWidth");n(this,"canvasHeight");n(this,"resourceManager");n(this,"upgradeManager");n(this,"areaManager");n(this,"onWalkerDefeated");n(this,"zombiePool");n(this,"entityCuller");n(this,"performanceMonitor");n(this,"collisionSystem");this.canvasWidth=e,this.canvasHeight=t,this.resourceManager=s,this.upgradeManager=i,this.areaManager=a,this.entityCuller=T.getInstance(),this.performanceMonitor=P.getInstance(),this.collisionSystem=E.getInstance(),this.zombiePool=new U(()=>new N(0,0,this.canvasWidth,this.canvasHeight,this.upgradeManager.getZombieSpeedMultiplier()),o=>{o.active=!0,o.position.set(0,0),o.velocity.set(0,0),o.updateSpeed(this.upgradeManager.getZombieSpeedMultiplier())},5,20)}update(e,t){const s=this.entityCuller.cullEntities(this.zombies,this.canvasWidth,this.canvasHeight);for(let a=this.zombies.length-1;a>=0;a--){const o=this.zombies[a];if(!o.active){this.zombiePool.release(o),this.zombies.splice(a,1);continue}s.includes(o)&&!this.entityCuller.shouldSkipUpdate(o,this.canvasWidth,this.canvasHeight)&&(o.updateWithWalkers(e,t),o.lastUpdateTime=performance.now(),this.checkCollisions(o,t))}const i=this.zombies.filter(a=>a.active);i.length>1&&this.collisionSystem.applySeparation(i,40);for(const a of i)this.collisionSystem.applyBoundaryCollision(a,this.canvasWidth,this.canvasHeight,100)}render(e){for(const t of this.zombies)t.active&&(t.render(e),this.performanceMonitor.incrementRenderCalls())}spawnZombie(e){const t=this.upgradeManager.getMaxZombies();if(this.zombies.length>=t)return!1;const s=10,i=Math.max(s,Math.min(this.canvasWidth-s,e.x)),a=Math.max(s,Math.min(this.canvasHeight-s,e.y)),o=this.zombiePool.get();return o.position.set(i,a),o.updateCanvasDimensions(this.canvasWidth,this.canvasHeight),this.entityCuller.setEntityPriority(o,.8),this.zombies.push(o),!0}checkCollisions(e,t){for(const s of t)if(s.active&&e.performAttack(s)){if(console.log(`Zombie attacked walker! Walker health: ${s.health}/${s.maxHealth}`),!s.active){const i=this.areaManager.getCurrentArea();if(this.resourceManager.awardSouls(1,i.soulMultiplier),console.log(`Zombie defeated a walker! Souls earned: ${i.soulMultiplier}, Total: ${this.resourceManager.getSouls()}`),this.onWalkerDefeated){const a=i.walkerColors,o=a[Math.floor(Math.random()*a.length)];this.onWalkerDefeated(s.position.x,s.position.y,o)}}break}}updateCanvasDimensions(e,t){this.canvasWidth=e,this.canvasHeight=t;for(const s of this.zombies)s.updateCanvasDimensions(e,t)}getZombieCount(){return this.zombies.filter(e=>e.active).length}getActiveZombies(){return this.zombies.filter(e=>e.active)}clear(){for(const e of this.zombies)e.destroy(),this.zombiePool.release(e);this.zombies=[]}getMaxZombies(){return this.upgradeManager.getMaxZombies()}applySpeedUpgrades(){const e=this.upgradeManager.getZombieSpeedMultiplier();for(const t of this.zombies)t.active&&t.updateSpeed(e)}setOnWalkerDefeated(e){this.onWalkerDefeated=e}}class G{constructor(e){n(this,"keys",new Set);n(this,"mousePosition",new g(0,0));n(this,"mousePressed",!1);n(this,"mouseJustPressed",!1);n(this,"canvas");n(this,"isTouchDevice",!1);n(this,"touchStartTime",0);n(this,"lastTouchEnd",0);n(this,"touchMoved",!1);n(this,"touchStartPosition",new g(0,0));n(this,"touchMoveThreshold",10);n(this,"multiTouchPrevented",!1);this.canvas=e,this.detectTouchDevice(),this.setupEventListeners()}detectTouchDevice(){this.isTouchDevice="ontouchstart"in window||navigator.maxTouchPoints>0,console.log(`Touch device detected: ${this.isTouchDevice}`)}setupEventListeners(){window.addEventListener("keydown",e=>{this.keys.add(e.key.toLowerCase())}),window.addEventListener("keyup",e=>{this.keys.delete(e.key.toLowerCase())}),this.canvas.addEventListener("mousedown",e=>{this.handlePointerDown(e.clientX,e.clientY)}),this.canvas.addEventListener("mouseup",()=>{this.mousePressed=!1}),this.canvas.addEventListener("mousemove",e=>{this.updateMousePosition(e.clientX,e.clientY)}),this.canvas.addEventListener("touchstart",e=>{if(e.preventDefault(),e.touches.length>1){this.multiTouchPrevented=!0;return}if(this.multiTouchPrevented=!1,e.touches.length>0){const t=e.touches[0];this.touchStartTime=Date.now(),this.touchMoved=!1,this.touchStartPosition.set(t.clientX,t.clientY),this.handlePointerDown(t.clientX,t.clientY)}},{passive:!1}),this.canvas.addEventListener("touchend",e=>{if(e.preventDefault(),this.multiTouchPrevented){this.multiTouchPrevented=!1;return}const t=Date.now();t-this.lastTouchEnd<300&&e.preventDefault(),this.lastTouchEnd=t;const s=t-this.touchStartTime;!this.touchMoved&&s<500,this.mousePressed=!1},{passive:!1}),this.canvas.addEventListener("touchmove",e=>{if(e.preventDefault(),this.multiTouchPrevented||e.touches.length===0)return;const t=e.touches[0];Math.sqrt(Math.pow(t.clientX-this.touchStartPosition.x,2)+Math.pow(t.clientY-this.touchStartPosition.y,2))>this.touchMoveThreshold&&(this.touchMoved=!0),this.updateMousePosition(t.clientX,t.clientY)},{passive:!1}),this.canvas.addEventListener("contextmenu",e=>{this.isTouchDevice&&e.preventDefault()})}handlePointerDown(e,t){this.updateMousePosition(e,t),this.mousePressed=!0,this.mouseJustPressed=!0}updateMousePosition(e,t){const s=this.canvas.getBoundingClientRect(),i=e-s.left,a=t-s.top;this.mousePosition.set(i,a)}isKeyPressed(e){return this.keys.has(e.toLowerCase())}getMousePosition(){return this.mousePosition.clone()}isMousePressed(){return this.mousePressed}wasMouseJustPressed(){const e=this.mouseJustPressed;return this.mouseJustPressed=!1,e}isTouch(){return this.isTouchDevice}getTouchPosition(){return this.mousePosition.clone()}update(){}destroy(){}}class q{constructor(e){n(this,"souls",0);n(this,"walkersDefeated",0);n(this,"saveManager");n(this,"baseSoulValue",1);this.saveManager=e,this.loadFromStorage()}awardSouls(e=this.baseSoulValue,t=1){const s=Math.floor(e*t);this.souls+=s,this.walkersDefeated++,this.saveToStorage()}spendSouls(e){return this.souls>=e?(this.souls-=e,this.saveToStorage(),!0):!1}getSouls(){return this.souls}getWalkersDefeated(){return this.walkersDefeated}setSouls(e){this.souls=Math.max(0,e)}setWalkersDefeated(e){this.walkersDefeated=Math.max(0,e)}saveToStorage(){this.saveManager.saveGameState({souls:this.souls,walkersDefeated:this.walkersDefeated})}loadFromStorage(){const e=this.saveManager.loadGameState();e&&(this.souls=e.souls||0,this.walkersDefeated=e.walkersDefeated||0)}reset(){this.souls=0,this.walkersDefeated=0,this.saveToStorage()}}class K{constructor(e){n(this,"upgrades",new Map);n(this,"saveManager");this.saveManager=e,this.initializeUpgrades(),this.loadFromStorage()}initializeUpgrades(){this.upgrades.set("zombie-speed",{level:0,baseCost:10,costMultiplier:1.5}),this.upgrades.set("max-zombies",{level:0,baseCost:25,costMultiplier:1.5})}getUpgradeLevel(e){const t=this.upgrades.get(e);return t?t.level:0}getUpgradeCost(e){const t=this.upgrades.get(e);return t?Math.floor(t.baseCost*Math.pow(t.costMultiplier,t.level)):0}purchaseUpgrade(e){const t=this.upgrades.get(e);return t?(t.level++,this.saveToStorage(),!0):!1}getZombieSpeedMultiplier(){return 1+this.getUpgradeLevel("zombie-speed")*.2}getMaxZombies(){return 10+this.getUpgradeLevel("max-zombies")*5}loadUpgradeData(e){for(const[t,s]of Object.entries(e))this.upgrades.has(t)&&this.upgrades.set(t,s)}getUpgradeData(){const e={};for(const[t,s]of this.upgrades)e[t]=s;return e}saveToStorage(){this.saveManager.saveGameState({upgrades:this.getUpgradeData()})}loadFromStorage(){const e=this.saveManager.loadGameState();e&&e.upgrades&&this.loadUpgradeData(e.upgrades)}reset(){this.initializeUpgrades(),this.saveToStorage()}}class Z{constructor(){n(this,"currentArea",0);n(this,"areas",[{id:0,name:"Peaceful Village",walkerHealth:1,walkerSpeed:50,soulMultiplier:1,unlockRequirement:0,backgroundColor:"#87CEEB",walkerColors:["#ff6b6b","#4ecdc4","#45b7d1"]},{id:1,name:"Busy Town",walkerHealth:2,walkerSpeed:75,soulMultiplier:2,unlockRequirement:25,backgroundColor:"#DDA0DD",walkerColors:["#96ceb4","#feca57","#ff9ff3"]},{id:2,name:"Fortified City",walkerHealth:4,walkerSpeed:100,soulMultiplier:4,unlockRequirement:100,backgroundColor:"#F0E68C",walkerColors:["#54a0ff","#5f27cd","#00d2d3"]},{id:3,name:"Military Base",walkerHealth:8,walkerSpeed:125,soulMultiplier:8,unlockRequirement:250,backgroundColor:"#CD853F",walkerColors:["#2d3436","#636e72","#74b9ff"]},{id:4,name:"Fortress Capital",walkerHealth:16,walkerSpeed:150,soulMultiplier:16,unlockRequirement:500,backgroundColor:"#8B4513",walkerColors:["#e17055","#fdcb6e","#6c5ce7"]}]);this.loadFromStorage()}getCurrentArea(){return this.areas[this.currentArea]}getArea(e){return this.areas.find(t=>t.id===e)||null}getAllAreas(){return[...this.areas]}isAreaUnlocked(e,t){const s=this.getArea(e);return s?t>=s.unlockRequirement:!1}getHighestUnlockedArea(e){let t=0;for(const s of this.areas)if(e>=s.unlockRequirement)t=s.id;else break;return t}setCurrentArea(e,t){return this.isAreaUnlocked(e,t)?(this.currentArea=e,this.saveToStorage(),!0):!1}getCurrentAreaId(){return this.currentArea}getProgressToNextArea(e){const t=this.currentArea+1,s=this.getArea(t);if(!s)return null;const i=e,a=s.unlockRequirement,o=Math.min(i/a*100,100);return{current:i,required:a,percentage:o}}hasNextArea(){return this.currentArea<this.areas.length-1}autoAdvanceArea(e){const t=this.getHighestUnlockedArea(e);return t>this.currentArea?(this.currentArea=t,this.saveToStorage(),!0):!1}saveToStorage(){try{const e={currentArea:this.currentArea};localStorage.setItem("endless-horde-area",JSON.stringify(e))}catch(e){console.warn("Failed to save area state:",e)}}loadFromStorage(){try{const e=localStorage.getItem("endless-horde-area");if(e){const t=JSON.parse(e);this.currentArea=t.currentArea||0}}catch(e){console.warn("Failed to load area state, using defaults:",e),this.currentArea=0}}reset(){this.currentArea=0,this.saveToStorage()}}class _{constructor(){n(this,"SAVE_KEY","endless-horde-complete-save");n(this,"SAVE_VERSION",1)}saveGameState(e){try{const t=this.loadGameState(),s={souls:e.souls??(t==null?void 0:t.souls)??0,walkersDefeated:e.walkersDefeated??(t==null?void 0:t.walkersDefeated)??0,currentArea:e.currentArea??(t==null?void 0:t.currentArea)??0,upgrades:e.upgrades??(t==null?void 0:t.upgrades)??{},saveVersion:this.SAVE_VERSION,lastSaved:Date.now()};return localStorage.setItem(this.SAVE_KEY,JSON.stringify(s)),console.log("Game state saved successfully"),!0}catch(t){return console.warn("Failed to save game state:",t),!1}}loadGameState(){try{const e=localStorage.getItem(this.SAVE_KEY);if(!e)return null;const t=JSON.parse(e);return t.saveVersion!==this.SAVE_VERSION?(console.warn("Save version mismatch, migrating save data"),this.migrateSaveData(t)):t}catch(e){return console.warn("Failed to load game state:",e),null}}migrateSaveData(e){try{const t=localStorage.getItem("endless-horde-save"),s=localStorage.getItem("endless-horde-upgrades"),i=localStorage.getItem("endless-horde-area"),a={souls:0,walkersDefeated:0,currentArea:0,upgrades:{},saveVersion:this.SAVE_VERSION,lastSaved:Date.now()};if(t){const o=JSON.parse(t);a.souls=o.souls||0,a.walkersDefeated=o.walkersDefeated||0}if(s){const o=JSON.parse(s);a.upgrades=o}if(i){const o=JSON.parse(i);a.currentArea=o.currentArea||0}return this.saveGameState(a),localStorage.removeItem("endless-horde-save"),localStorage.removeItem("endless-horde-upgrades"),localStorage.removeItem("endless-horde-area"),console.log("Successfully migrated save data to new format"),a}catch(t){return console.warn("Failed to migrate save data:",t),null}}hasSaveData(){return localStorage.getItem(this.SAVE_KEY)!==null}deleteSaveData(){try{return localStorage.removeItem(this.SAVE_KEY),localStorage.removeItem("endless-horde-save"),localStorage.removeItem("endless-horde-upgrades"),localStorage.removeItem("endless-horde-area"),console.log("Save data deleted successfully"),!0}catch(e){return console.warn("Failed to delete save data:",e),!1}}exportSaveData(){try{const e=this.loadGameState();return e?JSON.stringify(e,null,2):null}catch(e){return console.warn("Failed to export save data:",e),null}}importSaveData(e){try{const t=JSON.parse(e);if(typeof t.souls!="number"||typeof t.walkersDefeated!="number"||typeof t.currentArea!="number")throw new Error("Invalid save data format");return this.saveGameState(t)}catch(t){return console.warn("Failed to import save data:",t),!1}}getSaveMetadata(){const e=this.loadGameState();return e?{lastSaved:new Date(e.lastSaved),saveVersion:e.saveVersion}:null}}const y=class y{constructor(){n(this,"settings");n(this,"STORAGE_KEY","endless-horde-settings");this.settings=this.getDefaultSettings(),this.loadSettings(),this.detectReducedMotionPreference()}static getInstance(){return y.instance||(y.instance=new y),y.instance}getDefaultSettings(){const e=/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||"ontouchstart"in window||window.innerWidth<=768;return{reducedMotion:!1,soundEnabled:!0,showFPS:!e,autoSave:!0,mobileOptimizations:e,touchButtonsVisible:e,highContrastMode:!1}}detectReducedMotionPreference(){if(typeof window<"u"&&window.matchMedia){const e=window.matchMedia("(prefers-reduced-motion: reduce)");e.matches&&(this.settings.reducedMotion=!0,console.log("System reduced motion preference detected")),e.addEventListener("change",s=>{this.settings.reducedMotion=s.matches,this.saveSettings(),console.log(`Reduced motion preference changed: ${s.matches}`)});const t=window.matchMedia("(prefers-contrast: high)");t.matches&&(this.settings.highContrastMode=!0,console.log("System high contrast preference detected")),t.addEventListener("change",s=>{this.settings.highContrastMode=s.matches,this.saveSettings(),console.log(`High contrast preference changed: ${s.matches}`)})}}loadSettings(){try{const e=localStorage.getItem(this.STORAGE_KEY);if(e){const t=JSON.parse(e);this.settings={...this.getDefaultSettings(),...t},console.log("Settings loaded from localStorage")}}catch(e){console.warn("Failed to load settings, using defaults:",e),this.settings=this.getDefaultSettings()}}saveSettings(){try{localStorage.setItem(this.STORAGE_KEY,JSON.stringify(this.settings))}catch(e){console.warn("Failed to save settings:",e)}}isReducedMotionEnabled(){return this.settings.reducedMotion}isSoundEnabled(){return this.settings.soundEnabled}shouldShowFPS(){return this.settings.showFPS}isAutoSaveEnabled(){return this.settings.autoSave}isMobileOptimizationsEnabled(){return this.settings.mobileOptimizations}areTouchButtonsVisible(){return this.settings.touchButtonsVisible}isHighContrastModeEnabled(){return this.settings.highContrastMode}getSettings(){return{...this.settings}}setReducedMotion(e){this.settings.reducedMotion=e,this.saveSettings()}setSoundEnabled(e){this.settings.soundEnabled=e,this.saveSettings()}setShowFPS(e){this.settings.showFPS=e,this.saveSettings()}setAutoSave(e){this.settings.autoSave=e,this.saveSettings()}setMobileOptimizations(e){this.settings.mobileOptimizations=e,this.saveSettings()}setTouchButtonsVisible(e){this.settings.touchButtonsVisible=e,this.saveSettings()}setHighContrastMode(e){this.settings.highContrastMode=e,this.saveSettings()}updateSettings(e){this.settings={...this.settings,...e},this.saveSettings()}resetToDefaults(){this.settings=this.getDefaultSettings(),this.detectReducedMotionPreference(),this.saveSettings()}getKeyboardShortcuts(){return this.settings.mobileOptimizations?{"Tap screen":"Spawn zombie","Pause button":"Pause/Resume game","Upgrade button":"Toggle upgrade menu","Settings button":"Toggle reduced motion"}:{P:"Pause/Resume game",U:"Toggle upgrade menu",M:"Toggle reduced motion",F:"Toggle FPS display","Click/Tap":"Spawn zombie"}}getAccessibilityInfo(){const e=[];return this.settings.reducedMotion&&e.push("Reduced motion enabled"),this.settings.highContrastMode&&e.push("High contrast mode enabled"),this.settings.mobileOptimizations&&e.push("Mobile optimizations enabled"),this.settings.touchButtonsVisible&&e.push("Touch buttons visible"),e}};n(y,"instance");let F=y;class Y{constructor(e,t){n(this,"particles",[]);n(this,"canvasWidth");n(this,"canvasHeight");n(this,"particlePool");n(this,"entityCuller");n(this,"performanceMonitor");this.canvasWidth=e,this.canvasHeight=t,this.entityCuller=T.getInstance(),this.performanceMonitor=P.getInstance(),this.particlePool=new U(()=>({x:0,y:0,vx:0,vy:0,life:0,maxLife:0,color:"#ffffff",size:1}),s=>{s.x=0,s.y=0,s.vx=0,s.vy=0,s.life=0,s.maxLife=0,s.color="#ffffff",s.size=1},20,100)}update(e){this.particles=this.entityCuller.cullParticles(this.particles,this.canvasWidth,this.canvasHeight);for(let t=this.particles.length-1;t>=0;t--){const s=this.particles[t];s.x+=s.vx*e/1e3,s.y+=s.vy*e/1e3,s.life-=e,s.life<=0&&(this.particlePool.release(s),this.particles.splice(t,1))}}render(e){if(this.performanceMonitor.shouldSkipEffects())return;const t=new Map;for(const s of this.particles){const i=s.color;t.has(i)||t.set(i,[]),t.get(i).push(s)}e.save();for(const[s,i]of t){e.fillStyle=s,e.beginPath();for(const a of i){const o=a.life/a.maxLife;this.performanceMonitor.shouldUseReducedQuality()&&o<.3||(e.globalAlpha=o,e.arc(a.x,a.y,a.size,0,Math.PI*2))}e.fill()}e.restore(),this.performanceMonitor.incrementRenderCalls()}createDeathEffect(e,t,s){let i=8;this.performanceMonitor.shouldUseReducedQuality()?i=4:this.performanceMonitor.getPerformanceLevel()==="medium"&&(i=6);for(let a=0;a<i;a++){const o=a/i*Math.PI*2,r=50+Math.random()*50,l=this.particlePool.get();l.x=e,l.y=t,l.vx=Math.cos(o)*r,l.vy=Math.sin(o)*r,l.life=1e3,l.maxLife=1e3,l.color=s,l.size=2+Math.random()*3,this.particles.push(l)}}createAreaTransitionEffect(e){let t=20;this.performanceMonitor.shouldUseReducedQuality()?t=8:this.performanceMonitor.getPerformanceLevel()==="medium"&&(t=12);for(let s=0;s<t;s++){const i=this.particlePool.get();i.x=Math.random()*this.canvasWidth,i.y=Math.random()*this.canvasHeight,i.vx=(Math.random()-.5)*100,i.vy=(Math.random()-.5)*100,i.life=2e3,i.maxLife=2e3,i.color=e.walkerColors[Math.floor(Math.random()*e.walkerColors.length)],i.size=3+Math.random()*5,this.particles.push(i)}}createAmbientParticles(e){if(this.performanceMonitor.shouldSkipEffects())return;let t=.02;if(this.performanceMonitor.shouldUseReducedQuality()?t=.005:this.performanceMonitor.getPerformanceLevel()==="medium"&&(t=.01),Math.random()>t)return;const s=Math.random()<.5;let i,a,o,r;if(s)switch(Math.floor(Math.random()*4)){case 0:i=Math.random()*this.canvasWidth,a=-10,o=(Math.random()-.5)*20,r=10+Math.random()*20;break;case 1:i=this.canvasWidth+10,a=Math.random()*this.canvasHeight,o=-10-Math.random()*20,r=(Math.random()-.5)*20;break;case 2:i=Math.random()*this.canvasWidth,a=this.canvasHeight+10,o=(Math.random()-.5)*20,r=-10-Math.random()*20;break;default:i=-10,a=Math.random()*this.canvasHeight,o=10+Math.random()*20,r=(Math.random()-.5)*20;break}else i=Math.random()*this.canvasWidth,a=Math.random()*this.canvasHeight,o=(Math.random()-.5)*30,r=(Math.random()-.5)*30;const l=[...e.walkerColors,e.backgroundColor],h=l[Math.floor(Math.random()*l.length)],c=this.particlePool.get();c.x=i,c.y=a,c.vx=o,c.vy=r,c.life=3e3+Math.random()*2e3,c.maxLife=5e3,c.color=h,c.size=1+Math.random()*2,this.particles.push(c)}renderBackgroundEffects(e,t){e.save();const s=e.createRadialGradient(this.canvasWidth/2,this.canvasHeight/2,0,this.canvasWidth/2,this.canvasHeight/2,Math.max(this.canvasWidth,this.canvasHeight)/2);switch(t.id){case 0:s.addColorStop(0,"rgba(135, 206, 235, 0.1)"),s.addColorStop(1,"rgba(135, 206, 235, 0.05)");break;case 1:s.addColorStop(0,"rgba(221, 160, 221, 0.1)"),s.addColorStop(1,"rgba(221, 160, 221, 0.05)");break;case 2:s.addColorStop(0,"rgba(240, 230, 140, 0.1)"),s.addColorStop(1,"rgba(240, 230, 140, 0.05)");break;case 3:s.addColorStop(0,"rgba(205, 133, 63, 0.1)"),s.addColorStop(1,"rgba(205, 133, 63, 0.05)");break;case 4:s.addColorStop(0,"rgba(139, 69, 19, 0.15)"),s.addColorStop(1,"rgba(139, 69, 19, 0.08)");break;default:s.addColorStop(0,"rgba(255, 255, 255, 0.05)"),s.addColorStop(1,"rgba(255, 255, 255, 0.02)");break}e.fillStyle=s,e.fillRect(0,0,this.canvasWidth,this.canvasHeight),e.restore()}updateCanvasDimensions(e,t){this.canvasWidth=e,this.canvasHeight=t}clear(){for(const e of this.particles)this.particlePool.release(e);this.particles=[]}getParticleCount(){return this.particles.length}}const k=class k{constructor(){n(this,"announcementElement",null);n(this,"lastAnnouncement","");n(this,"announcementTimeout",null);n(this,"lastResourceAnnouncement",0);this.initializeAnnouncementElement()}static getInstance(){return k.instance||(k.instance=new k),k.instance}initializeAnnouncementElement(){this.announcementElement=document.getElementById("sr-announcements"),this.announcementElement||(this.announcementElement=document.createElement("div"),this.announcementElement.id="sr-announcements",this.announcementElement.setAttribute("aria-live","polite"),this.announcementElement.setAttribute("aria-atomic","true"),this.announcementElement.style.cssText="position: absolute; left: -10000px; width: 1px; height: 1px; overflow: hidden;",document.body.appendChild(this.announcementElement))}announce(e,t="polite"){!this.announcementElement||!e.trim()||e!==this.lastAnnouncement&&(this.lastAnnouncement=e,this.announcementTimeout&&clearTimeout(this.announcementTimeout),this.announcementElement.setAttribute("aria-live",t),this.announcementElement.textContent="",setTimeout(()=>{this.announcementElement&&(this.announcementElement.textContent=e)},100),this.announcementTimeout=window.setTimeout(()=>{this.announcementElement&&(this.announcementElement.textContent=""),this.lastAnnouncement=""},5e3))}announceGameState(e){switch(e){case"paused":this.announce("Game paused","assertive");break;case"resumed":this.announce("Game resumed","assertive");break;case"upgrade-menu-opened":this.announce("Upgrade menu opened","polite");break;case"upgrade-menu-closed":this.announce("Upgrade menu closed","polite");break;default:this.announce(e,"polite")}}announceUpgrade(e,t,s){this.announce(`Purchased ${e} level ${t} for ${s} souls`,"polite")}announceAreaChange(e,t){this.announce(`Advanced to ${e}, area ${t}`,"polite")}announceResourceChange(e,t){const s=Date.now();s-this.lastResourceAnnouncement<2e3||(this.lastResourceAnnouncement=s,this.announce(`${e} souls, ${t} walkers defeated`,"polite"))}announceMobileAction(e){switch(e){case"zombie-spawned":this.announce("Zombie spawned","polite");break;case"zombie-limit-reached":this.announce("Maximum zombies reached","polite");break;case"touch-button-pressed":this.announce("Button pressed","polite");break;default:this.announce(e,"polite")}}getAccessibilityStatus(){return{screenReaderSupport:!!this.announcementElement,reducedMotion:window.matchMedia("(prefers-reduced-motion: reduce)").matches,highContrast:window.matchMedia("(prefers-contrast: high)").matches,touchDevice:"ontouchstart"in window||navigator.maxTouchPoints>0}}focusCanvas(){const e=document.getElementById("gameCanvas");e&&e.focus()}handleKeyboardNavigation(e){switch(e.key){case"Escape":return this.announce("Menu closed","polite"),!0;case"Tab":return!1;case"Enter":case" ":return this.announce("Action triggered","polite"),!0;default:return!1}}announceGameInstructions(){const e=["Welcome to Endless Horde.","Tap or click on the screen to spawn zombies.","Zombies will hunt walkers and earn you souls.","Use souls to purchase upgrades.","On mobile, use the touch buttons for controls.","Press P to pause, U for upgrades, M for reduced motion."].join(" ");this.announce(e,"polite")}destroy(){this.announcementTimeout&&clearTimeout(this.announcementTimeout)}};n(k,"instance");let z=k;class J{constructor(e,t,s,i,a){n(this,"resourceManager");n(this,"upgradeManager");n(this,"areaManager");n(this,"canvasWidth");n(this,"canvasHeight");n(this,"upgradeButtons",[]);n(this,"showUpgradeMenu",!1);n(this,"onUpgradePurchased");n(this,"isMobile",!1);n(this,"uiScale",1);n(this,"accessibilityManager");this.resourceManager=e,this.upgradeManager=t,this.areaManager=s,this.canvasWidth=i,this.canvasHeight=a,this.accessibilityManager=z.getInstance(),this.detectMobile(),this.calculateUIScale(),this.initializeUpgradeButtons()}detectMobile(){this.isMobile=/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||"ontouchstart"in window||navigator.maxTouchPoints>0||window.innerWidth<=768}calculateUIScale(){if(this.isMobile){const e=Math.min(this.canvasWidth/800,this.canvasHeight/600);this.uiScale=Math.max(.8,Math.min(1.5,e))}else this.uiScale=1}initializeUpgradeButtons(){const e=this.isMobile?Math.max(200,250*this.uiScale):180,t=this.isMobile?Math.max(60,70*this.uiScale):50;this.upgradeButtons=[{id:"zombie-speed",label:"Zombie Speed",cost:this.upgradeManager.getUpgradeCost("zombie-speed"),description:"Increase zombie movement speed (+20%)",x:0,y:0,width:e,height:t,enabled:!1,level:this.upgradeManager.getUpgradeLevel("zombie-speed")},{id:"max-zombies",label:"Max Zombies",cost:this.upgradeManager.getUpgradeCost("max-zombies"),description:"Increase maximum zombie count (+5)",x:0,y:0,width:e,height:t,enabled:!1,level:this.upgradeManager.getUpgradeLevel("max-zombies")}]}update(){const e=this.resourceManager.getSouls();for(let t=0;t<this.upgradeButtons.length;t++){const s=this.upgradeButtons[t];if(s.cost=this.upgradeManager.getUpgradeCost(s.id),s.level=this.upgradeManager.getUpgradeLevel(s.id),s.enabled=e>=s.cost,this.showUpgradeMenu){s.x=this.canvasWidth/2-s.width/2;const i=this.isMobile?s.height+20:70;s.y=this.canvasHeight/2-100+t*i}}}render(e){this.renderSoulsCounter(e),this.renderAreaInfo(e),this.renderControls(e),this.showUpgradeMenu&&this.renderUpgradeMenu(e)}renderSoulsCounter(e){e.save();const t=this.isMobile?Math.max(16,18*this.uiScale):18,s=this.isMobile?Math.max(12,14*this.uiScale):14;e.textAlign="left",e.textBaseline="top",e.font=`bold ${t}px Arial`,e.fillStyle="#FFD700";const i=this.resourceManager.getSouls(),a=this.resourceManager.getWalkersDefeated(),o=this.isMobile?40:35;e.fillText(`Souls: ${i}`,10,o),e.font=`${s}px Arial`,e.fillStyle="#CCCCCC",e.fillText(`Walkers Defeated: ${a}`,10,o+25),e.restore()}renderAreaInfo(e){e.save();const t=this.areaManager.getCurrentArea(),s=this.resourceManager.getWalkersDefeated(),i=this.isMobile?Math.max(14,16*this.uiScale):16,a=this.isMobile?Math.max(10,12*this.uiScale):12,o=this.isMobile?Math.max(9,11*this.uiScale):11;e.textAlign="center",e.textBaseline="top",e.font=`bold ${i}px Arial`,e.fillStyle="#FFFFFF";const r=this.canvasWidth/2,l=this.isMobile?15:10;e.fillText(t.name,r,l),e.font=`${a}px Arial`,e.fillStyle="#FFD700",e.fillText(`Soul Multiplier: x${t.soulMultiplier}`,r,l+20);const h=this.areaManager.getProgressToNextArea(s);if(h){e.font=`${o}px Arial`,e.fillStyle="#CCCCCC",e.fillText(`Next Area: ${h.current}/${h.required} (${Math.floor(h.percentage)}%)`,r,l+35);const c=this.isMobile?Math.min(150,this.canvasWidth*.4):120,d=this.isMobile?6:4,m=r-c/2,p=l+50;e.fillStyle="#333333",e.fillRect(m,p,c,d),e.fillStyle="#4CAF50",e.fillRect(m,p,c*(h.percentage/100),d)}else e.font=`${o}px Arial`,e.fillStyle="#FFD700",e.fillText("Maximum Area Reached!",r,l+35);e.restore()}renderControls(e){this.isMobile||(e.save(),e.textAlign="left",e.textBaseline="bottom",e.font="14px Arial",e.fillStyle="#666",e.fillText("Press U to open upgrades",10,this.canvasHeight-50),e.restore())}renderUpgradeMenu(e){e.save(),e.fillStyle="rgba(0, 0, 0, 0.8)",e.fillRect(0,0,this.canvasWidth,this.canvasHeight);const t=this.isMobile?Math.max(20,24*this.uiScale):24,s=this.isMobile?Math.max(16,18*this.uiScale):18,i=this.isMobile?Math.max(14,16*this.uiScale):16;e.fillStyle="#FFFFFF",e.font=`bold ${t}px Arial`,e.textAlign="center",e.textBaseline="middle",e.fillText("UPGRADES",this.canvasWidth/2,this.canvasHeight/2-150),e.font=`${s}px Arial`,e.fillStyle="#FFD700",e.fillText(`Souls: ${this.resourceManager.getSouls()}`,this.canvasWidth/2,this.canvasHeight/2-120);for(const o of this.upgradeButtons)this.renderUpgradeButton(e,o);e.fillStyle="#CCCCCC",e.font=`${i}px Arial`;const a=this.isMobile?"Tap upgrade button to close":"Press U to close";e.fillText(a,this.canvasWidth/2,this.canvasHeight/2+150),e.restore()}renderUpgradeButton(e,t){e.save(),e.fillStyle=t.enabled?"#4CAF50":"#666666",e.fillRect(t.x,t.y,t.width,t.height),e.strokeStyle=t.enabled?"#45a049":"#555555",e.lineWidth=this.isMobile?3:2,e.strokeRect(t.x,t.y,t.width,t.height);const s=this.isMobile?Math.max(12,14*this.uiScale):14,i=this.isMobile?Math.max(9,10*this.uiScale):10,a=this.isMobile?Math.max(10,12*this.uiScale):12;e.fillStyle=t.enabled?"#FFFFFF":"#AAAAAA",e.font=`bold ${s}px Arial`,e.textAlign="center",e.textBaseline="middle";const o=t.x+t.width/2,r=t.y+t.height/2,l=this.isMobile?15:12;e.fillText(`${t.label} (Lv.${t.level})`,o,r-l),e.font=`${i}px Arial`,e.fillText(t.description,o,r),e.font=`${a}px Arial`,e.fillText(`Cost: ${t.cost} souls`,o,r+l),e.restore()}toggleUpgradeMenu(){this.showUpgradeMenu=!this.showUpgradeMenu}isUpgradeMenuOpen(){return this.showUpgradeMenu}handleClick(e){if(!this.showUpgradeMenu)return!1;for(const t of this.upgradeButtons)if(this.isPointInButton(e,t)&&t.enabled)return this.purchaseUpgrade(t.id);return!1}isPointInButton(e,t){return e.x>=t.x&&e.x<=t.x+t.width&&e.y>=t.y&&e.y<=t.y+t.height}purchaseUpgrade(e){const t=this.upgradeButtons.find(s=>s.id===e);return!t||!t.enabled?!1:this.resourceManager.spendSouls(t.cost)?(this.upgradeManager.purchaseUpgrade(e),console.log(`Purchased upgrade: ${t.label} (Level ${t.level+1})`),this.accessibilityManager.announceUpgrade(t.label,t.level+1,t.cost),this.onUpgradePurchased&&this.onUpgradePurchased(e),!0):!1}updateCanvasDimensions(e,t){this.canvasWidth=e,this.canvasHeight=t,this.detectMobile(),this.calculateUIScale(),this.initializeUpgradeButtons()}getUpgradeButton(e){return this.upgradeButtons.find(t=>t.id===e)}setOnUpgradePurchased(e){this.onUpgradePurchased=e}}class X{constructor(e,t,s){n(this,"canvasWidth");n(this,"canvasHeight");n(this,"touchButtons",[]);n(this,"isMobile",!1);n(this,"touchScale",1);n(this,"minTouchSize",44);n(this,"lastTouchTime",0);n(this,"touchCooldown",150);n(this,"vibrationSupported",!1);this.canvasWidth=t,this.canvasHeight=s,this.detectMobile(),this.detectVibrationSupported(),this.calculateTouchScale(),this.initializeTouchButtons()}detectMobile(){this.isMobile=/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||"ontouchstart"in window||navigator.maxTouchPoints>0||window.innerWidth<=768,console.log(`Mobile device detected: ${this.isMobile}`)}detectVibrationSupported(){this.vibrationSupported="vibrate"in navigator,console.log(`Vibration support: ${this.vibrationSupported}`)}calculateTouchScale(){const e=window.innerWidth,t=window.innerHeight,s=Math.min(e,t),i=window.devicePixelRatio||1;this.touchScale=Math.max(1,s/400*Math.min(i,2)),console.log(`Touch scale calculated: ${this.touchScale} (DPR: ${i})`)}initializeTouchButtons(){if(!this.isMobile)return;const e=Math.max(this.minTouchSize,50*this.touchScale),t=20*this.touchScale;this.touchButtons.push({id:"pause",label:"⏸️",x:this.canvasWidth-e-t,y:t,width:e,height:e,visible:!0,pressed:!1,icon:"pause"}),this.touchButtons.push({id:"upgrades",label:"⬆️",x:this.canvasWidth-e-t,y:this.canvasHeight-e-t,width:e,height:e,visible:!0,pressed:!1,icon:"upgrades"}),this.touchButtons.push({id:"settings",label:"⚙️",x:t,y:this.canvasHeight-e-t,width:e,height:e,visible:!0,pressed:!1,icon:"settings"})}updateCanvasDimensions(e,t){this.canvasWidth=e,this.canvasHeight=t,this.calculateTouchScale(),this.repositionButtons()}repositionButtons(){if(!this.isMobile)return;const e=Math.max(this.minTouchSize,50*this.touchScale),t=20*this.touchScale;for(const s of this.touchButtons){switch(s.id){case"pause":s.x=this.canvasWidth-e-t,s.y=t;break;case"upgrades":s.x=this.canvasWidth-e-t,s.y=this.canvasHeight-e-t;break;case"settings":s.x=t,s.y=this.canvasHeight-e-t;break}s.width=e,s.height=e}}handleTouch(e){if(!this.isMobile)return null;const t=Date.now();if(t-this.lastTouchTime<this.touchCooldown)return null;for(const s of this.touchButtons)if(s.visible&&this.isPointInButton(e,s))return s.pressed=!0,this.lastTouchTime=t,this.provideHapticFeedback(),setTimeout(()=>{s.pressed=!1},150),s.id;return null}provideHapticFeedback(){if(this.vibrationSupported)try{navigator.vibrate(50)}catch(e){console.log("Vibration failed:",e)}}isPointInButton(e,t){return e.x>=t.x&&e.x<=t.x+t.width&&e.y>=t.y&&e.y<=t.y+t.height}render(e){if(this.isMobile){e.save();for(const t of this.touchButtons)t.visible&&this.renderTouchButton(e,t);e.restore()}}renderTouchButton(e,t){const s=Math.min(t.width,t.height)*.15;t.pressed||(e.fillStyle="rgba(0, 0, 0, 0.3)",this.fillRoundedRect(e,t.x+3,t.y+3,t.width,t.height,s)),e.fillStyle=t.pressed?"rgba(255, 255, 255, 0.9)":"rgba(0, 0, 0, 0.7)",this.fillRoundedRect(e,t.x,t.y,t.width,t.height,s),e.strokeStyle=t.pressed?"#ffffff":"#cccccc",e.lineWidth=Math.max(2,this.touchScale),this.strokeRoundedRect(e,t.x,t.y,t.width,t.height,s),e.fillStyle=t.pressed?"#000000":"#ffffff";const i=Math.floor(t.height*.35*this.touchScale);e.font=`${i}px Arial`,e.textAlign="center",e.textBaseline="middle";const a=t.x+t.width/2,o=t.y+t.height/2;e.fillText(t.label,a,o),t.pressed&&(e.fillStyle="rgba(76, 175, 80, 0.3)",this.fillRoundedRect(e,t.x,t.y,t.width,t.height,s))}fillRoundedRect(e,t,s,i,a,o){e.beginPath(),e.moveTo(t+o,s),e.lineTo(t+i-o,s),e.quadraticCurveTo(t+i,s,t+i,s+o),e.lineTo(t+i,s+a-o),e.quadraticCurveTo(t+i,s+a,t+i-o,s+a),e.lineTo(t+o,s+a),e.quadraticCurveTo(t,s+a,t,s+a-o),e.lineTo(t,s+o),e.quadraticCurveTo(t,s,t+o,s),e.closePath(),e.fill()}strokeRoundedRect(e,t,s,i,a,o){e.beginPath(),e.moveTo(t+o,s),e.lineTo(t+i-o,s),e.quadraticCurveTo(t+i,s,t+i,s+o),e.lineTo(t+i,s+a-o),e.quadraticCurveTo(t+i,s+a,t+i-o,s+a),e.lineTo(t+o,s+a),e.quadraticCurveTo(t,s+a,t,s+a-o),e.lineTo(t,s+o),e.quadraticCurveTo(t,s,t+o,s),e.closePath(),e.stroke()}isMobileDevice(){return this.isMobile}getTouchScale(){return this.touchScale}setButtonVisibility(e,t){const s=this.touchButtons.find(i=>i.id===e);s&&(s.visible=t)}setButtonCallback(e,t){const s=this.touchButtons.find(i=>i.id===e);s&&(s.callback=t)}getUIScale(){if(!this.isMobile)return 1;const e=Math.min(window.innerWidth/800,window.innerHeight/600);return Math.max(.8,Math.min(1.5,e))}validateTouchTargets(){if(!this.isMobile)return!0;for(const e of this.touchButtons)if(e.visible&&(e.width<this.minTouchSize||e.height<this.minTouchSize))return console.warn(`Touch target ${e.id} is too small: ${e.width}x${e.height}`),!1;return!0}getAccessibilityInfo(){const e=[];if(this.isMobile){e.push("Mobile interface active"),e.push(`Touch scale: ${this.touchScale.toFixed(1)}`),e.push(`Vibration support: ${this.vibrationSupported?"enabled":"disabled"}`);for(const t of this.touchButtons)t.visible&&e.push(`${t.id} button available at position ${Math.round(t.x)}, ${Math.round(t.y)}`)}return e}validateAccessibility(){const e=[];let t=!0;if(!this.isMobile)return{valid:!0,issues:[]};for(const a of this.touchButtons)if(a.visible){(a.width<this.minTouchSize||a.height<this.minTouchSize)&&(e.push(`Button ${a.id} is too small: ${a.width}x${a.height}px (minimum: ${this.minTouchSize}px)`),t=!1);for(const o of this.touchButtons)if(o!==a&&o.visible){const r=this.getButtonDistance(a,o);r<8&&(e.push(`Buttons ${a.id} and ${o.id} are too close: ${r.toFixed(1)}px`),t=!1)}}const s=this.getSafeAreaInset("top"),i=this.getSafeAreaInset("bottom");for(const a of this.touchButtons)a.visible&&(a.y<s&&e.push(`Button ${a.id} may be obscured by device notch or status bar`),a.y+a.height>this.canvasHeight-i&&e.push(`Button ${a.id} may be obscured by device home indicator`));return{valid:t,issues:e}}getButtonDistance(e,t){const s=e.x+e.width/2,i=e.y+e.height/2,a=t.x+t.width/2,o=t.y+t.height/2;return Math.sqrt(Math.pow(a-s,2)+Math.pow(o-i,2))}getSafeAreaInset(e){const s=getComputedStyle(document.documentElement).getPropertyValue(`env(safe-area-inset-${e})`);if(s)return parseInt(s)||0;const i=navigator.userAgent;if(/iPhone/.test(i))switch(e){case"top":return 44;case"bottom":return 34;default:return 0}return 0}optimizeForDevice(){if(!this.isMobile)return;const e=navigator.userAgent;/iPhone|iPad/.test(e)?(this.touchCooldown=100,console.log("Applied iOS touch optimizations")):/Android/.test(e)&&(this.touchCooldown=200,console.log("Applied Android touch optimizations")),window.screen&&window.screen.refreshRate>60&&(this.touchCooldown=Math.max(50,this.touchCooldown*.8),console.log("Optimized for high refresh rate display"))}getTouchAreaExpansion(){return Math.max(8,this.touchScale*6)}isPointInExpandedTouchArea(e,t){const s=this.getTouchAreaExpansion();return e.x>=t.x-s&&e.x<=t.x+t.width+s&&e.y>=t.y-s&&e.y<=t.y+t.height+s}}class Q{constructor(){n(this,"canvas");n(this,"ctx");n(this,"devicePixelRatio");n(this,"lastTime",0);n(this,"accumulator",0);n(this,"fixedTimeStep",1e3/60);n(this,"animationId",0);n(this,"isPaused",!1);n(this,"lastPauseKeyState",!1);n(this,"lastUpgradeKeyState",!1);n(this,"lastMotionKeyState",!1);n(this,"fps",0);n(this,"frameCount",0);n(this,"fpsLastTime",0);n(this,"walkerSystem");n(this,"zombieSystem");n(this,"inputManager");n(this,"resourceManager");n(this,"upgradeManager");n(this,"areaManager");n(this,"saveManager");n(this,"settingsManager");n(this,"assetManager");n(this,"visualEffects");n(this,"hud");n(this,"mobileUI");n(this,"accessibilityManager");n(this,"performanceMonitor");if(this.canvas=document.getElementById("gameCanvas"),!this.canvas)throw new Error("Canvas element not found");const e=this.canvas.getContext("2d");if(!e)throw new Error("Could not get 2D context");this.ctx=e,this.devicePixelRatio=window.devicePixelRatio||1,this.setupCanvas(),this.setupInput(),this.initializeAssets().then(()=>{this.initializeSystems(),this.startGameLoop()}).catch(t=>{console.error("Failed to initialize assets:",t),this.initializeSystems(),this.startGameLoop()})}setupCanvas(){const e=/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)||window.innerWidth<=768;let t,s;if(e){const o=this.getSafeAreaInset("top"),r=this.getSafeAreaInset("bottom"),l=this.getSafeAreaInset("left"),h=this.getSafeAreaInset("right");t=window.innerWidth-l-h-10,s=window.innerHeight-o-r-60,t=Math.max(320,t),s=Math.max(240,s)}else t=Math.min(window.innerWidth-40,800),s=Math.min(window.innerHeight-120,600);const i=4/3;t/s>i?t=s*i:s=t/i,t=Math.min(t,window.innerWidth-20),s=Math.min(s,window.innerHeight-80),this.canvas.style.width=t+"px",this.canvas.style.height=s+"px",this.canvas.width=t*this.devicePixelRatio,this.canvas.height=s*this.devicePixelRatio,this.ctx.scale(this.devicePixelRatio,this.devicePixelRatio),console.log(`Canvas setup: ${t}x${s} (CSS), ${this.canvas.width}x${this.canvas.height} (actual), DPR: ${this.devicePixelRatio}`)}getSafeAreaInset(e){const s=getComputedStyle(document.documentElement).getPropertyValue(`env(safe-area-inset-${e})`);if(s&&s!=="env(safe-area-inset-"+e+")"){const a=parseInt(s);return isNaN(a)?0:a}const i=navigator.userAgent;if(/iPhone/.test(i))switch(e){case"top":return 44;case"bottom":return 34;default:return 0}return 0}setupInput(){let e=null;window.addEventListener("resize",()=>{e&&clearTimeout(e),e=window.setTimeout(()=>{this.handleResize()},150)}),window.addEventListener("orientationchange",()=>{setTimeout(()=>{this.handleResize()},500)}),document.addEventListener("visibilitychange",()=>{document.hidden&&(this.isPaused||(this.togglePause(),console.log("Auto-paused due to app backgrounding")))})}handleResize(){console.log("Handling window resize...");const e=this.canvas.width/this.devicePixelRatio,t=this.canvas.height/this.devicePixelRatio;this.setupCanvas();const s=this.canvas.width/this.devicePixelRatio,i=this.canvas.height/this.devicePixelRatio;if(Math.abs(s-e)>1||Math.abs(i-t)>1){if(console.log(`Canvas dimensions changed: ${e}x${t} -> ${s}x${i}`),this.walkerSystem&&this.zombieSystem&&this.visualEffects&&this.hud&&this.mobileUI){this.walkerSystem.updateCanvasDimensions(s,i),this.zombieSystem.updateCanvasDimensions(s,i),this.visualEffects.updateCanvasDimensions(s,i),this.hud.updateCanvasDimensions(s,i),this.mobileUI.updateCanvasDimensions(s,i),this.mobileUI.optimizeForDevice();const a=this.mobileUI.validateAccessibility();a.valid||console.warn("Accessibility issues detected after resize:",a.issues)}this.accessibilityManager.announce(`Screen resized to ${Math.round(s)} by ${Math.round(i)} pixels`,"polite")}}async initializeAssets(){this.assetManager=x.getInstance(),this.settingsManager=F.getInstance(),await this.assetManager.initializePlaceholderSprites(),A.setReducedMotion(this.settingsManager.isReducedMotionEnabled()),console.log("Assets initialized successfully")}initializeSystems(){const e=this.canvas.width/this.devicePixelRatio,t=this.canvas.height/this.devicePixelRatio;this.performanceMonitor=P.getInstance(),this.accessibilityManager=z.getInstance(),this.performanceMonitor.onPerformanceLevelChange(s=>{console.log(`Performance level changed to: ${s}`),this.handlePerformanceLevelChange(s)}),this.saveManager=new _,this.resourceManager=new q(this.saveManager),this.upgradeManager=new K(this.saveManager),this.areaManager=new Z,this.walkerSystem=new O(e,t,this.areaManager),this.zombieSystem=new V(e,t,this.resourceManager,this.upgradeManager,this.areaManager),this.inputManager=new G(this.canvas),this.visualEffects=new Y(e,t),this.hud=new J(this.resourceManager,this.upgradeManager,this.areaManager,e,t),this.mobileUI=new X(this.canvas,e,t),this.hud.setOnUpgradePurchased(s=>{this.handleUpgradePurchased(s)}),this.zombieSystem.setOnWalkerDefeated((s,i,a)=>{this.visualEffects.createDeathEffect(s,i,a)}),this.initializeMobileOptimizations(),this.loadGameState(),setTimeout(()=>{this.accessibilityManager.announceGameInstructions()},2e3)}togglePause(){this.isPaused=!this.isPaused,console.log(this.isPaused?"Game Paused":"Game Resumed"),this.accessibilityManager.announceGameState(this.isPaused?"paused":"resumed")}toggleReducedMotion(){const t=!this.settingsManager.isReducedMotionEnabled();this.settingsManager.setReducedMotion(t),A.setReducedMotion(t),console.log(`Reduced motion ${t?"enabled":"disabled"}`)}handleMobileButtonPress(e){switch(this.accessibilityManager.announceMobileAction("touch-button-pressed"),e){case"pause":this.togglePause();break;case"upgrades":this.hud.toggleUpgradeMenu(),this.accessibilityManager.announceGameState(this.hud.isUpgradeMenuOpen()?"upgrade-menu-opened":"upgrade-menu-closed");break;case"settings":this.toggleReducedMotion();break;default:console.log(`Unknown mobile button pressed: ${e}`)}}handleUpgradePurchased(e){console.log(`Applying upgrade: ${e}`),e==="zombie-speed"&&this.zombieSystem.applySpeedUpgrades()}startGameLoop(){this.lastTime=performance.now(),this.fpsLastTime=this.lastTime,this.gameLoop(this.lastTime)}gameLoop(e){if(this.animationId=requestAnimationFrame(t=>this.gameLoop(t)),this.inputManager.update(),this.handleAllInput(),this.isPaused)this.lastTime=e,this.render(0);else{const t=e-this.lastTime;for(this.lastTime=e,this.updateFPS(e),this.accumulator+=t;this.accumulator>=this.fixedTimeStep;)this.update(this.fixedTimeStep),this.accumulator-=this.fixedTimeStep;const s=this.accumulator/this.fixedTimeStep;this.render(s)}}updateFPS(e){this.frameCount++,e-this.fpsLastTime>=1e3&&(this.fps=Math.round(this.frameCount*1e3/(e-this.fpsLastTime)),this.frameCount=0,this.fpsLastTime=e);const t=this.walkerSystem.getWalkerCount()+this.zombieSystem.getZombieCount(),s=this.visualEffects.getParticleCount();this.performanceMonitor.updateMetrics(e,t,s)}update(e){this.checkAreaProgression(),this.walkerSystem.update(e);const t=this.walkerSystem.getActiveWalkers();this.zombieSystem.update(e,t),this.visualEffects.update(e);const s=this.areaManager.getCurrentArea();this.visualEffects.createAmbientParticles(s),this.hud.update()}handleAllInput(){const e=this.inputManager.isKeyPressed("p");if(e&&!this.lastPauseKeyState&&this.togglePause(),this.lastPauseKeyState=e,this.inputManager.wasMouseJustPressed()){const t=this.inputManager.getMousePosition(),s=this.mobileUI.handleTouch(t);if(s==="pause"){this.togglePause();return}if(!this.isPaused){if(s&&s!=="pause"){this.handleMobileButtonPress(s);return}this.hud.isUpgradeMenuOpen()?this.hud.handleClick(t):this.zombieSystem.spawnZombie(t)?this.accessibilityManager.announceMobileAction("zombie-spawned"):(console.log("Cannot spawn more zombies - limit reached!"),this.accessibilityManager.announceMobileAction("zombie-limit-reached"))}}if(!this.isPaused){const t=this.inputManager.isKeyPressed("u");t&&!this.lastUpgradeKeyState&&this.hud.toggleUpgradeMenu(),this.lastUpgradeKeyState=t;const s=this.inputManager.isKeyPressed("m");s&&!this.lastMotionKeyState&&this.toggleReducedMotion(),this.lastMotionKeyState=s}}render(e){const t=this.canvas.width/this.devicePixelRatio,s=this.canvas.height/this.devicePixelRatio,i=this.areaManager.getCurrentArea();if(this.ctx.fillStyle=i.backgroundColor,this.ctx.fillRect(0,0,t,s),this.visualEffects.renderBackgroundEffects(this.ctx,i),this.walkerSystem.render(this.ctx),this.zombieSystem.render(this.ctx),this.visualEffects.render(this.ctx),this.isPaused){this.ctx.save(),this.ctx.fillStyle="rgba(0, 0, 0, 0.7)",this.ctx.fillRect(0,0,t,s),this.ctx.fillStyle="#ffffff",this.ctx.font="32px Arial",this.ctx.textAlign="center",this.ctx.textBaseline="middle";const a=t/2,o=s/2;this.ctx.fillText("PAUSED",a,o),this.ctx.font="16px Arial",this.ctx.fillText("Press P to resume",a,o+40),this.ctx.restore()}this.settingsManager.shouldShowFPS()&&this.drawFPS(),this.drawUI(),this.hud.render(this.ctx),this.mobileUI.render(this.ctx)}drawFPS(){this.ctx.save(),this.ctx.textAlign="left",this.ctx.textBaseline="top",this.ctx.font="14px Arial",this.fps>=50?this.ctx.fillStyle="#00ff00":this.fps>=30?this.ctx.fillStyle="#ffff00":this.ctx.fillStyle="#ff0000";const e=this.performanceMonitor.getMetrics(),t=this.performanceMonitor.getPerformanceLevel();this.ctx.fillText(`FPS: ${this.fps}`,10,10),this.ctx.fillText(`Frame: ${e.frameTime.toFixed(1)}ms`,10,28),this.ctx.fillText(`Level: ${t.toUpperCase()}`,10,46),this.ctx.fillText(`Entities: ${e.entityCount}`,10,64),this.ctx.fillText(`Particles: ${e.particleCount}`,10,82),this.ctx.restore()}drawUI(){this.ctx.save();const e=this.canvas.height/this.devicePixelRatio,t=this.canvas.width/this.devicePixelRatio;this.ctx.textAlign="right",this.ctx.textBaseline="top",this.ctx.font="16px Arial",this.ctx.fillStyle="#ffffff";const s=this.walkerSystem.getWalkerCount(),i=this.zombieSystem.getZombieCount(),a=this.zombieSystem.getMaxZombies();this.ctx.fillText(`Walkers: ${s}`,t-10,10),this.ctx.fillText(`Zombies: ${i}/${a}`,t-10,30),this.ctx.textAlign="left",this.ctx.textBaseline="bottom",this.ctx.font="14px Arial",this.ctx.fillStyle="#666",this.ctx.fillText("Press P to pause/resume",10,e-50),this.ctx.fillText("Press M to toggle reduced motion",10,e-30),this.ctx.fillText("Click/tap to spawn zombies",10,e-10),this.ctx.restore()}handlePerformanceLevelChange(e){switch(e){case C.LOW:console.log("Switching to low performance mode - reducing visual effects");break;case C.MEDIUM:console.log("Switching to medium performance mode - moderate optimizations");break;case C.HIGH:console.log("Switching to high performance mode - full visual effects");break}}loadGameState(){const e=this.saveManager.loadGameState();e?(this.resourceManager.setSouls(e.souls),this.resourceManager.setWalkersDefeated(e.walkersDefeated),e.upgrades&&this.upgradeManager.loadUpgradeData(e.upgrades),this.areaManager.setCurrentArea(e.currentArea,e.walkersDefeated),console.log("Game state loaded successfully")):console.log("No save data found, starting fresh game")}checkAreaProgression(){const e=this.resourceManager.getWalkersDefeated();if(this.areaManager.autoAdvanceArea(e)){const s=this.areaManager.getCurrentArea();console.log(`Advanced to new area: ${s.name}`),this.walkerSystem.updateWalkerSprites(this.areaManager.getCurrentAreaId()),this.visualEffects.createAreaTransitionEffect(s),this.saveManager.saveGameState({currentArea:this.areaManager.getCurrentAreaId()})}}initializeMobileOptimizations(){if(!this.mobileUI.isMobileDevice())return;console.log("Initializing mobile optimizations..."),this.mobileUI.optimizeForDevice();const e=this.mobileUI.validateAccessibility();e.valid?console.log("Mobile accessibility validation passed"):console.warn("Accessibility issues detected:",e.issues),this.setupMobileEventListeners();const t=this.mobileUI.getAccessibilityInfo();this.accessibilityManager.announce(`Mobile interface active. ${t.join(". ")}`,"polite")}setupMobileEventListeners(){let e=0;if(document.addEventListener("touchend",t=>{const s=Date.now();s-e<=300&&t.preventDefault(),e=s},{passive:!1}),document.addEventListener("contextmenu",t=>{this.mobileUI.isMobileDevice()&&t.preventDefault()}),"orientation"in screen&&"lock"in screen.orientation)try{screen.orientation.lock("landscape").catch(()=>{console.log("Orientation lock not supported or denied")})}catch{console.log("Orientation lock not available")}if("wakeLock"in navigator){let t=null;const s=async()=>{try{t=await navigator.wakeLock.request("screen"),console.log("Screen wake lock activated")}catch(i){console.log("Wake lock request failed:",i)}};this.isPaused||s(),document.addEventListener("visibilitychange",()=>{t!==null&&document.visibilityState==="visible"&&!this.isPaused&&s()})}}destroy(){this.animationId&&cancelAnimationFrame(this.animationId),this.accessibilityManager.destroy()}}document.addEventListener("DOMContentLoaded",()=>{try{new Q,console.log("Endless Horde game initialized successfully")}catch(u){console.error("Failed to initialize game:",u)}});
